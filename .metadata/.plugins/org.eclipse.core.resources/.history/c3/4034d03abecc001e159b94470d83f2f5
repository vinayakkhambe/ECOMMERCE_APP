package com.app.service;


import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.app.entity.Product;
import com.app.repository.ProductRepository;

import jakarta.transaction.Transactional;

@Service
@Transactional
public class ProductService {
	
	@Autowired
	private ProductRepository productRepository;
	
	
	//create product
	
	public Product saveProduct(Product product) {
		// Perform validation or business logic if needed
		return productRepository.save(product);
		}
	
	
	//retrive by id
	
	public Product getById(Long id)
	{
		Product p = productRepository.findById(id).get();
		return p;
	}
	
	
	//retrive All
	
	public List<Product> getAllProducts()
	{
		List<Product> list = new ArrayList();
		list = productRepository.findAll();
		return list;
	}
	
	//Update product
	
	public Product updateProduct(Long id, Product updatedProduct) {
		Optional<Product> existingProduct = productRepository.findById(id);
		if (existingProduct.isPresent()) {
		Product product = existingProduct.get();
		product.setProductName(updatedProduct.getProductName());
		product.setPrice(updatedProduct.getPrice());
		product.setDescription(updatedProduct.getDescription());
		product.setCategory(updatedProduct.getCategory());
		return productRepository.save(product);
		}
		return null; // Handle the case when the product doesn't exist
		}
		
	
	//delete product
		
	public void deleteProduct(Long id) {
		productRepository.deleteById(id);

		}
	
	public List<Product> getProductsByCategory(String categoryname)
	{
		return productRepository.getByCategory(categoryname).get();
	}
	


	
}
